name: Clear Nightly Tag

on:
  workflow_dispatch: # 允许手动触发
  schedule:
    - cron: '0 0 * * *' # 每天午夜执行

jobs:
  clear-nightly-tag:
    name: Clear Nightly Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取所有git历史和tags

      - name: List and delete old nightly tags
        run: |
          echo "Fetching all tags from remote to ensure we are up-to-date..."
          git fetch origin --tags

          # 创建一个数组，每个元素是 "版本号 完整的标签名" 的格式
          nightly_tags=()
          while IFS= read -r tag; do
            if [[ $tag =~ \.n([0-9]+)\.nightly$ ]]; then
              # 将解析出的数字和完整的标签名作为一个数组元素添加
              nightly_tags+=("${BASH_REMATCH[1]} $tag")
            fi
          done <<< "$(git tag -l '*.nightly')"

          # 检查是否找到了任何nightly标签
          if [ ${#nightly_tags[@]} -eq 0 ]; then
            echo "No nightly tags found matching the pattern. Exiting."
            exit 0
          fi

          echo "Found and will sort the following nightly tags:"
          printf "%s\n" "${nightly_tags[@]}"

          mapfile -t sorted_tags < <(printf "%s\n" "${nightly_tags[@]}" | sort -k1,1nr)

          echo "Sorted nightly tags (top 10 will be kept):"
          printf "%s\n" "${sorted_tags[@]}"

          # 从排序后的数组中，获取第11个及之后的所有元素作为待删除列表
          tags_to_delete=("${sorted_tags[@]:10}")

          if [ ${#tags_to_delete[@]} -eq 0 ]; then
            echo "No old nightly tags to delete."
          else
            echo "The following tags will be deleted:"
            # 预先打印所有将要删除的标签
            for item in "${tags_to_delete[@]}"; do
              # 从 "版本号 标签名" 中提取出标签名（第二部分）
              tag_name=$(echo "$item" | cut -d' ' -f2-)
              echo "  - $tag_name"
            done

            # 循环执行删除操作
            for item in "${tags_to_delete[@]}"; do
              tag_name=$(echo "$item" | cut -d' ' -f2-)
              echo "Deleting tag: $tag_name"
              git push --delete origin "$tag_name"
            done
          fi